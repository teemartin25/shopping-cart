{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Category } from '../category.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data-storage.service\";\nimport * as i2 from \"../requests.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction AddCategoryFormComponent_span_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This category name is already existing\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddCategoryFormComponent_span_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddCategoryFormComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtemplate(1, AddCategoryFormComponent_span_9_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, AddCategoryFormComponent_span_9_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.addCategoryForm.get(\"categoryName\").getError(\"categoryNameIsForbidden\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.addCategoryForm.get(\"categoryName\").getError(\"required\"));\n  }\n}\n\nfunction AddCategoryFormComponent_span_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This category ID is already existing\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddCategoryFormComponent_span_14_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddCategoryFormComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtemplate(1, AddCategoryFormComponent_span_14_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, AddCategoryFormComponent_span_14_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.addCategoryForm.get(\"categoryId\").getError(\"categoryIdIsForbidden\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.addCategoryForm.get(\"categoryId\").getError(\"required\"));\n  }\n}\n\nexport let AddCategoryFormComponent = /*#__PURE__*/(() => {\n  class AddCategoryFormComponent {\n    constructor(dataStorageService, requestsService, route, router) {\n      this.dataStorageService = dataStorageService;\n      this.requestsService = requestsService;\n      this.route = route;\n      this.router = router;\n      this.categories = [];\n      this.forbiddenCategoryNames = [];\n      this.forbiddenCategoryIds = [];\n    }\n\n    ngOnInit() {\n      this.activatedSub1 = this.dataStorageService.updatedCategories.subscribe(updatedCategories => {\n        this.categories = updatedCategories;\n\n        for (const key in updatedCategories) {\n          if (updatedCategories.hasOwnProperty(key)) {\n            this.forbiddenCategoryNames.push(updatedCategories[key].categoryName);\n            this.forbiddenCategoryIds.push(updatedCategories[key].categoryId);\n          }\n        }\n      });\n      this.dataStorageService.triggerModalCloseForAutoLogout.subscribe(trigger => {\n        this.hideOpenedModal();\n      }); //console.log(this.forbiddenCategoryNames);\n      //console.log(this.forbiddenCategoryIds);\n\n      this.dataStorageService.getCategories();\n      this.addCategoryForm = new FormGroup({\n        categoryName: new FormControl(null, [Validators.required, this.forbiddenCategoryName.bind(this)]),\n        categoryId: new FormControl(null, [Validators.required, this.forbiddenCategoryId.bind(this)])\n      });\n    }\n\n    ngOnDestroy() {\n      this.activatedSub1.unsubscribe();\n    }\n\n    onSubmit() {\n      const addedCategoryName = this.addCategoryForm.value.categoryName;\n      const addedCategoryId = this.addCategoryForm.value.categoryId;\n      this.dataStorageService.addToCategories(new Category(addedCategoryName, addedCategoryId));\n      this.addCategoryForm.reset();\n      this.router.navigate(['/categories'], {\n        queryParams: {\n          allowEdit: '1'\n        }\n      });\n      setTimeout(() => {\n        this.dataStorageService.triggerAddCategoryToast.next(this.addCategoryForm.value);\n      }, 200);\n    }\n\n    forbiddenCategoryName(control) {\n      const lowercased = this.forbiddenCategoryNames.map(name => name.toLowerCase());\n      const uppercased = this.forbiddenCategoryNames.map(name => name.toUpperCase());\n      const titlecased = this.forbiddenCategoryNames.map(name => name.charAt(0).toUpperCase() + name.substr(1));\n\n      if (lowercased.includes(control.value) || uppercased.includes(control.value) || titlecased.includes(control.value)) {\n        return {\n          categoryNameIsForbidden: true\n        };\n      }\n\n      return null;\n    }\n\n    forbiddenCategoryId(control) {\n      const lowercased = this.forbiddenCategoryIds.map(id => id.toLowerCase());\n      const uppercased = this.forbiddenCategoryIds.map(id => id.toUpperCase());\n      const titlecased = this.forbiddenCategoryIds.map(id => id.charAt(0).toUpperCase() + id.substr(1));\n\n      if (lowercased.includes(control.value) || uppercased.includes(control.value) || titlecased.includes(control.value)) {\n        return {\n          categoryIdIsForbidden: true\n        };\n      }\n\n      return null;\n    }\n\n    hideOpenedModal() {\n      const element = document.getElementById('modalDismiss');\n      element.click();\n    }\n\n  }\n\n  AddCategoryFormComponent.ɵfac = function AddCategoryFormComponent_Factory(t) {\n    return new (t || AddCategoryFormComponent)(i0.ɵɵdirectiveInject(i1.DataStorageService), i0.ɵɵdirectiveInject(i2.RequestsService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AddCategoryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddCategoryFormComponent,\n    selectors: [[\"app-add-category-form\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[1, \"lead\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-lg-12\"], [1, \"form-floating\"], [\"type\", \"text\", \"id\", \"floatingInput\", \"placeholder\", \"Shoes, Bags, Etc.\", \"formControlName\", \"categoryName\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"class\", \"help-block text-danger\", 4, \"ngIf\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"text\", \"id\", \"floatingPassword\", \"placeholder\", \"Shoes01, Bags04, Etc.\", \"formControlName\", \"categoryId\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [1, \"row\", \"px-3\"], [\"data-bs-dismiss\", \"modal\", \"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mb-1\", 3, \"disabled\"], [\"id\", \"modalDismiss\", \"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [1, \"help-block\", \"text-danger\"], [4, \"ngIf\"]],\n    template: function AddCategoryFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"Add Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddCategoryFormComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Category Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AddCategoryFormComponent_span_9_Template, 3, 2, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Category ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, AddCategoryFormComponent_span_14_Template, 3, 2, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵtext(17, \" Add Category \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵtext(19, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.addCategoryForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_1_0 = ctx.addCategoryForm.get(\"categoryName\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.addCategoryForm.get(\"categoryName\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !((tmp_2_0 = ctx.addCategoryForm.get(\"categoryId\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.addCategoryForm.get(\"categoryId\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.addCategoryForm.valid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i5.NgIf],\n    styles: [\"\"]\n  });\n  return AddCategoryFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}